# general settings
name: Catinetll_ex6_finetune
model_type: CatDualModel
num_gpu: 1  # set num_gpu: 0 for cpu mode
# manual_seed: 114514
multitrain: true
round: 1               
dataset_random_fetch: true
random_fetch_path: datasets/catintell_dataset
val_ratio: 0.2
# if dataset_random_fetch is on, the csv_path would be disbaled in the train and val phase.
# a new csv would be created and saved in the models folder

# dataset and data loader settings
datasets:
  train:
    name: Catintell
    type: ImgCataDataset
    image_folder: datasets/catintell_dataset
    csv_path: /data/huden/CATINTELL/datasets/catintell_image_dataset/catintell_image_pair_all.csv
    
    flip: true
    crop: true
    image_size: !!int 256
    resize: true
    fine_size: 768
    min_multiplier: 16
    # augment_ratio: 10
    # mean: [0.485, 0.456, 0.406]
    # std: [0.229, 0.224, 0.225]

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Catintelltest
    type: ImgCataDataset
    image_folder: datasets/catintell_dataset
    csv_path: /data/huden/CATINTELL/datasets/catintell_image_dataset/catintell_image_pair_all.csv

    flip: false
    crop: false
    image_size: !!int 768
    resize: true
    fine_size: 768
    min_multiplier: 16

    # augment_ratio: 1
    # mean: [0.485, 0.456, 0.406]
    # std: [0.229, 0.224, 0.225]

# network structures
network_g_A:
  type: CatintellConv_D5
  dim: 16
  stage: 4
  neck_blocks: 1
  layer_scale_init_value: !!float 1e-5
  use_bias: True

network_d_A:
  type: SwinTransformer
  img_size: 256
  patch_size: 4
  in_chans: 3
  num_classes: 1 #
  embed_dim: 64
  depths: [2, 2, 6, 2]
  num_heads: [2, 4, 8, 16]
  window_size: 8 # windows here
  mlp_ratio: 4.
  qkv_bias: True
  drop_rate: 0.
  attn_drop_rate: 0.
  drop_path_rate: 0.1
  ape: False
  patch_norm: True
  use_checkpoint: False
  sigmoid: False



network_g_B:
  type: CatintellConv_D5
  dim: 32
  stage: 4
  neck_blocks: 1
  layer_scale_init_value: !!float 1e-5
  use_bias: True
# network_d:
#   type: ConvNeXt
#   num_classes: 1
#   depths: [3,3, 9, 3]
#   dims: [96, 192, 384, 768]
#   drop_path_rate: 0.1

  
network_d_B:
  type: SwinTransformer
  img_size: 256
  patch_size: 4
  in_chans: 3
  num_classes: 1 #
  embed_dim: 64
  depths: [2, 2, 6, 2]
  num_heads: [2, 4, 8, 16]
  window_size: 8 # windows here
  mlp_ratio: 4.
  qkv_bias: True
  drop_rate: 0.
  attn_drop_rate: 0.
  drop_path_rate: 0.1
  ape: False
  patch_norm: True
  use_checkpoint: False
  sigmoid: False

# path

path:
  pretrain_net_g_A: experiments/Catinetll_ex4_finetune/models/0_net_g_a_latest.pth
  pretrain_net_d_A: 
  pretrain_net_g_B: experiments/Catinetll_ex4_finetune/models/0_net_g_b_latest.pth
  pretrain_net_d_B: 
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.99
  optimizer_opt_A:
    optim_g:
      type: Adam
      lr: !!float 1e-6
      weight_decay: 0
      betas: [0.9, 0.99]
    optim_d:
      type: Adam
      lr: !!float 1e-6
      weight_decay: 0
      betas: [0.9, 0.99]
    net_d_iters: 1   # train net_g ever x round
    net_g_init_iters: 0  # train net_g from x round
    net_g_end_iters: 60000

  optimizer_opt_B:
    optim_g:
      type: Adam
      lr: !!float 1e-5
      weight_decay: 0
      betas: [0.9, 0.99]
    optim_d:
      type: Adam
      lr: !!float 1e-5
      weight_decay: 0
      betas: [0.9, 0.99]
    net_d_iters: 1   # train net_g ever x round
    net_g_init_iters: 0  # train net_g from x round
    net_g_end_iters: 999999999

  scheduler:
    type: MultiStepLR
    milestones: [10000, 20000, 30000, 50000]
    gamma: 0.5

  total_iter: 80000
  warmup_iter: 1000  # -1 for no warm up

  

  # losses
  loss_opt_A:
    pixel_opt:
      type: SmoothL1Loss
      loss_weight: !!float 1e-3
      reduction: mean
    perceptual_opt:
      type: FundusPerceptualLoss
      layer_weights:
        'conv5_4': 1
      vgg_type: vgg19
      use_input_norm: false
      range_norm: false
      perceptual_weight: !!float 1e-1
      style_weight: !!float 1e-3
      criterion: l1
      # loss_weight: 1e-2
    gan_opt:
      type: GANLoss
      gan_type: vanilla
      real_label_val: 1.0
      fake_label_val: 0.0
      loss_weight: !!float 1e-2
    iden_opt:
      type: SmoothL1Loss
      loss_weight: !!float 1e-1

  loss_opt_B:
    pixel_opt:
      type: SmoothL1Loss
      loss_weight: !!float 1
      reduction: mean
    perceptual_opt:
      type: FundusPerceptualLoss
      layer_weights:
        'conv5_4': 1
      vgg_type: vgg19
      use_input_norm: false
      range_norm: false
      perceptual_weight: !!float 1e-2
      style_weight: !!float 1e-6
      criterion: l1
      # loss_weight: 1e-2
    gan_opt:
      type: GANLoss
      gan_type: vanilla
      real_label_val: 1.0
      fake_label_val: 0.0
      loss_weight: !!float 1e-2
    iden_opt:
      type: SmoothL1Loss
      loss_weight: !!float 1e-2

  

# validation settings
val:
  val_freq: !!float 5000
  save_img: true
  use_pbar: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      input_order: HWC
    ssim:
      type: calculate_ssim
      crop_border: 2
      input_order: HWC
    # L1:
    #   type: calculate_ssim
    #   crop_border: 0
    #   input_order: HWC


# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: !!float 5000
  save_best: false

